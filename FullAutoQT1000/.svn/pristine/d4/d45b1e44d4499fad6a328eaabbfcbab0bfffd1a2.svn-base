#include "setinterface.h"
#include "ui_setinterface.h"
#include "mainwindow.h"
#include "paramdef.h"

SetInterface::SetInterface(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::SetInterface)
{
    ui->setupUi(this);
    //
    m_pMainWnd = parent;
    //初始化导航栏
    InitNavigation();
    //获取配置文件对象
    m_pSettinsObj = ( (MainWindow* )m_pMainWnd)->GetSettingsObj();
    //获取测试界面对象
    m_pTestInterface = ( (MainWindow* )m_pMainWnd)->GetTestInterface();
    //获取数据库对象
    m_devDB = ( (MainWindow* )m_pMainWnd)->GetDatabaseObj();
    //m_pTestInterface->m_mapTestItemPos.key("4","");
    //获取配置参数内容
    //m_SetParam = m_pSettinsObj->ReadSettingsInfoToMap();
    //根据参数显示控件选项
    UpdateUIControl();
    //初始化参考值表框
    InitRenfTable();
}

SetInterface::~SetInterface()
{
    delete ui;
}

/********************************************************
 *@Name:        UpdateDbToRenf
 *@Author:      HuaT
 *@Description: 更新参考值数据表内容到表格上
 *@Param:       无
 *@Return:      无
 *@Version:     1.0
 *@Date:        2016-6-13
********************************************************/
void SetInterface::UpdateDbToRenf()
{
    ui->tw_Set_RenfvInfo->setRowCount(0);
    QString querySql = "select * from renfvalue";
    QSqlQuery* query = m_devDB->GetSqlQuery();
    query->exec(querySql);
    quint8 nSex;
    QString strAge;
    while(query->next()){
        ui->tw_Set_RenfvInfo->insertRow(ui->tw_Set_RenfvInfo->rowCount());
        //项目名称
        QTableWidgetItem* item1 = new QTableWidgetItem;
        item1->setText(query->value(0).toString());
        item1->setTextAlignment(Qt::AlignCenter);
        ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,0,item1);
        //参考值
        QTableWidgetItem* item2 = new QTableWidgetItem;
        item2->setText(query->value(1).toString());
        item2->setTextAlignment(Qt::AlignCenter);
        ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,1,item2);
        //年龄
        QTableWidgetItem* item3 = new QTableWidgetItem;
        strAge = m_UtilTool.ProcValue(query->value(2).toString(),query->value(3).toString());
        item3->setText(strAge);
        item3->setTextAlignment(Qt::AlignCenter);
        ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,2,item3);
        //性别
        QTableWidgetItem* item4 = new QTableWidgetItem;
        nSex = query->value(4).toInt();
        if(nSex == 1){
            item4->setText(QObject::tr("男"));
        }else if(nSex == 2){
            item4->setText(QObject::tr("女"));
        }else{
            item4->setText(QObject::tr("男/女"));
        }
        item4->setTextAlignment(Qt::AlignCenter);
        ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,3,item4);
    }
}

/********************************************************
 *@Name:        InitNavigation
 *@Author:      HuaT
 *@Description: 初始化导航栏
 *@Param1:      无
 *@Return:      无
 *@Version:     1.0
 *@Date:        2018-8-17
********************************************************/
void SetInterface::InitNavigation()
{
    QStringList items;
    items<<QObject::tr("常规设置")<<QObject::tr("参考值设置")<<QObject::tr("参数设置")
        <<QObject::tr("系统设置")<<QObject::tr("系统信息")<<QObject::tr("调试设置");
    for(int n=0; n<items.size(); n++){
        QListWidgetItem* subitem = new QListWidgetItem;
        subitem->setText(items.at(n));
        subitem->setSizeHint(QSize(187,80));
        ui->lw_Set_Navigation->addItem(subitem);
    }
}

/********************************************************
 *@Name:        UpdateUIControl
 *@Author:      HuaT
 *@Description: 初始化界面控件参数
 *              扫描模式 --- 0：自动编码，1：自动扫码
 *@Param1:      无
 *@Return:      无
 *@Version:     1.0
 *@Date:        2018-8-17
********************************************************/
void SetInterface::UpdateUIControl()
{
    if(m_pSettinsObj->GetParam(SCANMODE).toInt()  == 1){
        ui->rb_Set_ScanEncode->setChecked(true);
    }else{
        ui->rb_Set_AutoEncode->setChecked(true);
    }
}

/********************************************************
 *@Name:        InitRenfTable
 *@Author:      HuaT
 *@Description: 初始化参考值列表框
 *@Param1:      无
 *@Return:      无
 *@Version:     1.0
 *@Date:        2018-8-17
********************************************************/
void SetInterface::InitRenfTable()
{
    ui->tw_Set_RenfvInfo->setSelectionBehavior(QTableWidget::SelectRows);
    ui->tw_Set_RenfvInfo->setEditTriggers(QTableWidget::NoEditTriggers);
    ui->tw_Set_RenfvInfo->setSelectionMode(QTableWidget::SingleSelection);
    ui->tw_Set_RenfvInfo->setColumnCount(4);
    ui->tw_Set_RenfvInfo->horizontalHeader()->setResizeMode(QHeaderView::Stretch);
    //ui->tw_Set_RenfvInfo->setRowCount(5);
    ui->tw_Set_RenfvInfo->verticalHeader()->setHidden(true);

    QStringList listHeader;
    listHeader<<"测试名称"<<"参考值"<<"年龄"<<"性别";
    ui->tw_Set_RenfvInfo->setHorizontalHeaderLabels(listHeader);

    ui->tw_Set_RenfvInfo->verticalHeader()->setDefaultSectionSize(42);
}

/*
 *
 *当前行改变
 */
void SetInterface::on_lw_Set_Navigation_currentRowChanged(int currentRow)
{
    ui->stackedWidget->setCurrentIndex(currentRow);
}

/*
 *
 * 常规界面-确定按钮
 *
 */
void SetInterface::on_btn_Set_GenSave_clicked()
{
    //扫码模式
    if(ui->rb_Set_AutoEncode->isChecked()){
        m_pSettinsObj->SetParam(SCANMODE,"0");
    }else{
        m_pSettinsObj->SetParam(SCANMODE,"1");
    }
    //
    //写入配置文件
    m_pSettinsObj->SaveAllSettingsInfoToFile();
    //
    emit m_pSettinsObj->emitSettingChange();
    //提示
    QMessageBox::information(this,"Note","保存成功",QMessageBox::Ok);
}

/*
 *
 * 常规界面-取消按钮
 *
 */
void SetInterface::on_btn_Set_GenCancel_clicked()
{
    //更新控件
    UpdateUIControl();
}


/*
 *
 * 常规界面-自动编码单选控件
 *
 */
void SetInterface::on_rb_Set_AutoEncode_clicked()
{
    m_pSettinsObj->SetParam(SCANMODE,"0");
}

/*
 *
 * 常规界面-自动扫码单选控件
 *
 */
void SetInterface::on_rb_Set_ScanEncode_clicked()
{
    m_pSettinsObj->SetParam(SCANMODE,"1");
}

/*
 *
 * 参考值界面-增加按钮
 *
 */
void SetInterface::on_btn_Set_RenfAdd_clicked()
{
    RenfInfo ri;
    ri.m_listItem = m_pTestInterface->GetTestItems().keys();
    //
    RenfValue *RenfvDlg = new RenfValue(ri,this);
    connect(RenfvDlg,SIGNAL(RenfInfoAddComplete(RenfInfo&)),this,SLOT(RecvAddRenfValue(RenfInfo&)));
    RenfvDlg->SetShowMode(true);
    RenfvDlg->show();
}

/*
 *
 * 参考值界面-修改按钮
 *
 */
void SetInterface::on_btn_Set_RenfModify_clicked()
{
    //参考值对话框
    RenfInfo ri;
    QString Title = QObject::tr("提示");
    QString Msg = QObject::tr("请先选择需要修改的数据");
    int CurrentRow = ui->tw_Set_RenfvInfo->currentRow();
    if(CurrentRow == -1){
        QMessageBox::information(this,Title,Msg,QMessageBox::Ok);
        return;
    }
    QStringList strList = GetRowValue(ui->tw_Set_RenfvInfo);
    //项目名称
    ri.m_Item = strList.at(0);
    //项目列表
    //QString strCMD = "select item from itemtype";
    ri.m_listItem = m_pTestInterface->GetTestItems().keys();
    //qDebug()<<ri.m_listItem;
    //参考值
    ri.m_Value = strList.at(1);
    //年龄
    QStringList listAge = m_UtilTool.ParseValue(strList.at(2));
    ri.m_AgeLow = listAge.at(0);
    ri.m_AgeHight = listAge.at(1);
    //性别
    ri.m_Sex = strList.at(3);
    RenfValue *RenfvDlg = new RenfValue(ri,this);
    connect(RenfvDlg,SIGNAL(RenfInfoModifyComplete(RenfInfo&)),this,SLOT(RecvModifyRenfValue(RenfInfo&)));
    RenfvDlg->SetShowMode(false);
    RenfvDlg->show();
}

/*
 *
 * 参考值界面-删除按钮
 *
 */
void SetInterface::on_btn_Set_RenfDelete_clicked()
{
    QString Title = QObject::tr("提示");
    QString Msg = QObject::tr("请选择需要删除的数据");
    int CurrentRow = ui->tw_Set_RenfvInfo->currentRow();
    if(CurrentRow == -1){
        QMessageBox::information(this,Title,Msg,QMessageBox::Ok);
        return;
    }
    QString strTitle,strContent;
    strTitle = QObject::tr("提示");
    strContent = QObject::tr("确认删除此数据?");

    if(QMessageBox::Yes == QMessageBox::information(this,strTitle,strContent,QMessageBox::Yes | QMessageBox::No)){
        QStringList stringList = GetRowValue(ui->tw_Set_RenfvInfo);
        //更新数据库
        QString deleteSql;
        QStringList listAge;
        listAge = m_UtilTool.ParseValue(stringList.at(2));
        quint8 nSex;
        if(stringList.at(3).compare(QObject::tr("Male")) == 0){
            nSex = 1;
        }else if(stringList.at(3).compare(QObject::tr("Female")) == 0){
            nSex = 2;
        }else{
            nSex = 0;
        }
        deleteSql = QString("delete from renfvalue where \
                            item='%1' and value='%2' and agelow='%3' and agehight='%4'and sex=%5 ")\
                .arg(stringList.at(0)).arg(stringList.at(1)).arg(listAge.at(0))
                .arg(listAge.at(1)).arg(nSex);
                m_devDB->Exec(deleteSql);
        //qDebug()<<deleteSql;
        //更新控件
        ui->tw_Set_RenfvInfo->removeRow(CurrentRow);
    }
}

/********************************************************
 *@Name:        RecvAddRenfValue
 *@Author:      HuaT
 *@Description: 接收新增参考值信息
 *@Param:       需要新增的参考值内容
 *@Return:      无
 *@Version:     1.0
 *@Date:        2016-5-13
********************************************************/
void SetInterface::RecvAddRenfValue(RenfInfo &ri)
{
    //插入数据库
    //用户性别，0为男/女，1为男，2为女，Male / Female
    quint8 nSex;
    if(ri.m_Sex.compare(QObject::tr("男")) == 0){
        nSex = 1;
    }else if(ri.m_Sex.compare(QObject::tr("女")) == 0){
        nSex = 2;
    }else{
        nSex = 0;
    }
    QString insertSql;
    insertSql = QString("insert into renfvalue values('%1','%2','%3','%4',%5);")\
            .arg(ri.m_Item).arg(ri.m_Value).arg(ri.m_AgeLow).arg(ri.m_AgeHight).arg(nSex);
    m_devDB->Exec(insertSql);
    //插入表单控件
    ui->tw_Set_RenfvInfo->insertRow(ui->tw_Set_RenfvInfo->rowCount());
    //项目名称
    QTableWidgetItem* item = new QTableWidgetItem;
    item->setText(ri.m_Item);
    ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,0,item);
    //值
    QTableWidgetItem* value = new QTableWidgetItem;
    value->setText(ri.m_Value);
    ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,1,value);
    //年龄
    QTableWidgetItem* age = new QTableWidgetItem;
    age->setText(m_UtilTool.ProcValue(ri.m_AgeLow,ri.m_AgeHight));
    ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,2,age);
    //性别
    QTableWidgetItem* sex = new QTableWidgetItem;
    sex->setText(ri.m_Sex);
    ui->tw_Set_RenfvInfo->setItem(ui->tw_Set_RenfvInfo->rowCount()-1,3,sex);
}


/********************************************************
 *@Name:        RecvModifyRenfValue
 *@Author:      HuaT
 *@Description: 接收修改参考值信息
 *@Param:       需要修改的参考值内容
 *@Return:      无
 *@Version:     1.0
 *@Date:        2016-5-13
********************************************************/
void SetInterface::RecvModifyRenfValue(RenfInfo &ri)
{
    int nCurrentRow = ui->tw_Set_RenfvInfo->currentRow();
    QStringList strList = GetRowValue(ui->tw_Set_RenfvInfo);
    //
    quint8 nSex,nOldSex;
    if(ri.m_Sex.compare(QObject::tr("Male")) == 0){
        nSex = 1;
    }else if(ri.m_Sex.compare(QObject::tr("Female")) == 0){
        nSex = 2;
    }else{
        nSex = 0;
    }
    if(strList.at(3).compare(QObject::tr("Male")) == 0){
        nOldSex = 1;
    }else if(strList.at(3).compare(QObject::tr("Female")) == 0){
        nOldSex = 2;
    }else{
        nOldSex = 0;
    }
    QStringList listOleAge;
    //0：下限，没有则插入空
    //1：上限，没有则插入空
    listOleAge = m_UtilTool.ParseValue(strList.at(2));
    QString UpdateSql;
    //更新数据库内容
    UpdateSql = QString("update renfvalue set item='%1',value='%2',AgeLow='%3',AgeHight='%4'\
                        ,sex=%5 where item='%6' and value='%7' and AgeLow='%8' and AgeHight='%9' and sex=%10 ")\
            .arg(ri.m_Item).arg(ri.m_Value).arg(ri.m_AgeLow).arg(ri.m_AgeHight)
            .arg(nSex).arg(strList.at(0)).arg(strList.at(1))
            .arg(listOleAge.at(0)).arg(listOleAge.at(1)).arg(nOldSex);
    //qDebug()<<UpdateSql;
    if(!m_devDB->Exec(UpdateSql)){
        qDebug()<<"RecvModifyRenfValue: update renfvalue error";
    }
    //更新控件内容
    //项目名称
    QTableWidgetItem* item = new QTableWidgetItem;
    item->setText(ri.m_Item);
    ui->tw_Set_RenfvInfo->setItem(nCurrentRow,0,item);
    //新值
    QTableWidgetItem* Value = new QTableWidgetItem;
    Value->setText(ri.m_Value);
    ui->tw_Set_RenfvInfo->setItem(nCurrentRow,1,Value);
    //新的年龄
    QTableWidgetItem* Age = new QTableWidgetItem;
    Age->setText(m_UtilTool.ProcValue(ri.m_AgeLow,ri.m_AgeHight));
    ui->tw_Set_RenfvInfo->setItem(nCurrentRow,2,Age);
    //新的性别
    QTableWidgetItem* Sex = new QTableWidgetItem;
    Sex->setText(ri.m_Sex);
    ui->tw_Set_RenfvInfo->setItem(nCurrentRow,3,Sex);
}

/********************************************************
 *@Name:        GetRowValue
 *@Author:      HuaT
 *@Description: 获取指定表格控件的一行数据
 *@Param:       指定的表格控件对象
 *@Return:      一行的数据内容，未选择一行则返回空
 *@Version:     1.0
 *@Date:        2016-6-13
********************************************************/
QStringList SetInterface::GetRowValue(QTableWidget *tw)
{
    QStringList strList;
    if(tw->currentRow() == -1){
        return strList;
    }
    for(int i=0; i<tw->columnCount(); i++){
        strList.append(tw->item(tw->currentRow(),i)->text());
    }
    return strList;
}
