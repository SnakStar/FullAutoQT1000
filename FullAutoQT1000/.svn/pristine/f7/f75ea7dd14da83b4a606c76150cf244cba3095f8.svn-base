#include "queryinterface.h"
#include "ui_queryinterface.h"
#include "mainwindow.h"

QueryInterface::QueryInterface(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::QueryInterface)
{
    ui->setupUi(this);
    //
    m_pMainWnd = parent;
    m_Devdb = ((MainWindow*)m_pMainWnd)->GetDatabaseObj();
    //初始化查询列表
    InitQueryTable();
    //初始化时间控件
    InitDateControl();
}

QueryInterface::~QueryInterface()
{
    delete ui;
}

/********************************************************
 *@Name:        InitQueryTable
 *@Author:      HuaT
 *@Description: 初始化查询列表字段信息
 *@Param1:      无
 *@Return:      无
 *@Version:     1.0
 *@Date:        2018-6-29
********************************************************/
void QueryInterface::InitQueryTable()
{
    QStringList listHeader;
    listHeader<<QObject::tr("样本编号")<<QObject::tr("测试项目")<<QObject::tr("结果")
                <<QObject::tr("测试时间")<<QObject::tr("参考值");

    ui->tw_Query_QueryInfo->setColumnCount(listHeader.size());
    ui->tw_Query_QueryInfo->setRowCount(RESULT_ROW_COUNT);

    ui->tw_Query_QueryInfo->setHorizontalHeaderLabels(listHeader);
    ui->tw_Query_QueryInfo->setEditTriggers(QTableWidget::NoEditTriggers);
    ui->tw_Query_QueryInfo->setSelectionBehavior(QTableWidget::SelectRows);

    ui->tw_Query_QueryInfo->setColumnWidth(0,200);
    ui->tw_Query_QueryInfo->setColumnWidth(1,200);
    ui->tw_Query_QueryInfo->setColumnWidth(2,150);
    ui->tw_Query_QueryInfo->setColumnWidth(3,180);
    ui->tw_Query_QueryInfo->horizontalHeader()->setStretchLastSection(true);

    ui->tw_Query_QueryInfo->verticalHeader()->setDefaultSectionSize(42);
}

/********************************************************
 *@Name:        InitDateControl
 *@Author:      HuaT
 *@Description: 初始化日期控件
 *@Param1:      无
 *@Return:      无
 *@Version:     1.0
 *@Date:        2018-6-29
********************************************************/
void QueryInterface::InitDateControl()
{
    QDate dateCur = QDate::currentDate();
    ui->de_Query_DateStart->setDate(dateCur);
    ui->de_Query_DateEnd->setDate(dateCur);
}

/********************************************************
 *@Name:        ShowQueryData
 *@Author:      HuaT
 *@Description: 显示指定查询按钮
 *@Param1:      无
 *@Return:      无
 *@Version:     1.0
 *@Date:        2018-6-29
********************************************************/
void QueryInterface::ShowQueryData(QStringList listData)
{
    ui->tw_Query_QueryInfo->setRowCount(0);
    int nCount = 0;
    for(int n=0; n<listData.size(); n+=5){
        nCount = ui->tw_Query_QueryInfo->rowCount();
        ui->tw_Query_QueryInfo->insertRow(nCount);
        //样本编号
        QTableWidgetItem* item1 = new QTableWidgetItem;
        item1->setText( listData.at(n) );
        item1->setTextAlignment(Qt::AlignCenter);
        ui->tw_Query_QueryInfo->setItem(nCount,0,item1);
        //测试项目
        QTableWidgetItem* item2 = new QTableWidgetItem;
        item2->setText( listData.at(n+1) );
        item2->setTextAlignment(Qt::AlignCenter);
        ui->tw_Query_QueryInfo->setItem(nCount,1,item2);
        //结果
        QTableWidgetItem* item3 = new QTableWidgetItem;
        item3->setText( listData.at(n+2) );
        item3->setTextAlignment(Qt::AlignCenter);
        ui->tw_Query_QueryInfo->setItem(nCount,2,item3);
        //测试时间
        QTableWidgetItem* item4 = new QTableWidgetItem;
        item4->setText( listData.at(n+3) );
        item4->setTextAlignment(Qt::AlignCenter);
        ui->tw_Query_QueryInfo->setItem(nCount,3,item4);
        //参考值
        QTableWidgetItem* item5 = new QTableWidgetItem;
        item5->setText( listData.at(n+4) );
        item5->setTextAlignment(Qt::AlignCenter);
        ui->tw_Query_QueryInfo->setItem(nCount,4,item5);
    }
}

/*
 *查询按钮事件
 */
void QueryInterface::on_pb_Query_Query_clicked()
{
    QString strStartDate = ui->de_Query_DateStart->date().toString("yyyy-MM-dd");
    QString strEndDate = ui->de_Query_DateEnd->date().toString("yyyy-MM-dd");
    QString strSql = QString("select number,item,result,testdate,reference from patient where date(testdate) between '%1' and '%2' ").arg(strStartDate).arg(strEndDate);
    //qDebug()<<strSql;
    //qDebug()<<m_Devdb->ExecQuery(strSql);
    ShowQueryData(m_Devdb->ExecQuery(strSql));
}
