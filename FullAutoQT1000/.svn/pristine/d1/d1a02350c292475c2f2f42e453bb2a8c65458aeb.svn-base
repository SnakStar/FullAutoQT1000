#ifndef SETINTERFACE_H
#define SETINTERFACE_H

#include <QDialog>
#include <QListWidgetItem>
#include <QDate>
#include <QTime>
#include <QFile>
#include <QTextStream>
#include <QDebug>
#include <QDir>
#include "cutilsettings.h"
#include "testinterface.h"
#include "cqtprodb.h"
#include "cutiltool.h"
#include "renfvalue.h"
#include "debugintefacedlg.h"
#include "usersetdlg.h"
#include "qextserial/qextserialport.h"
#ifdef Q_OS_WIN32
#include <windows.h>
#endif

#define ADDUSER 1
#define MODIFYUSER 2

namespace Ui {
class SetInterface;
}

class SetInterface : public QDialog
{
    Q_OBJECT
    
public:
    explicit SetInterface(QWidget *parent = 0);
    ~SetInterface();

public:
    bool eventFilter(QObject *obj, QEvent *e);

public:
    //更新数据库内参考值内容到表格上
    void UpdateDbToRenf();
    
private slots:
    void RecvAddRenfValue(RenfInfo& ri);
    void RecvModifyRenfValue(RenfInfo& ri);
    void RecvSampleTypeAddSignals();
    void RecvHardwareVersion(QByteArray baData);
    void RecvCheckHardwareVersion(QByteArray baData);

private slots:
    void on_lw_Set_Navigation_currentRowChanged(int currentRow);

    void on_btn_Set_GenSave_clicked();

    void on_btn_Set_GenCancel_clicked();

    void on_rb_Set_AutoEncode_clicked();

    void on_rb_Set_ScanEncode_clicked();

    void on_btn_Set_RenfAdd_clicked();

    void on_btn_Set_RenfModify_clicked();

    void on_btn_Set_RenfDelete_clicked();

    void on_btn_Set_SetDateSave_clicked();

    void on_btn_Set_Poweroff_clicked();

    void on_btn_Set_DebugOk_clicked();

    void on_btn_Set_UserAdd_clicked();

    void on_btn_Set_UserModify_clicked();

    void on_btn_Set_UserDelete_clicked();

    void on_btn_Set_GenDelSampleType_clicked();

    void on_pb_Set_DebugLoginShow_pressed();

    void on_pb_Set_DebugLoginShow_released();

    void on_pb_Curve_QueryData_clicked();

    void on_tw_Curve_ResultInfo_cellPressed(int row, int column);

    void on_pb_Curve_ClearCurve_clicked();

private:
    Ui::SetInterface *ui;

private:
    //设置界面导航对象
    QStringList m_strlistContent;
    //主界面窗口对象
    QWidget* m_pMainWnd;
    //配置文件对象
    CUtilSettings* m_pSettinsObj;
    //测试界面
    TestInterface* m_pTestInterface;
    //加样样本类型指针对象
    QMap<QString,QString>* m_pmapSampleTypeObj;
    //数据库对象
    CQtProDB* m_devDB;
    //工具对象
    CUtilTool m_UtilTool;
    //图标路径
    QStringList m_lisIconPath;
    QStringList m_lisIconPathPressed;
    //custom对象
    CPackCustomPlot* m_packPlot;
    //配置参数对象
    //QMap<QString,QString> m_SetParam;
    //输入法对象
    //MyInputPanelContext* m_myInputPanel;
private:
    //初始化列表导航栏
    void InitNavigation();
    //根据配置参数显示控件选项
    void UpdateUIControl();
    //初始化参考值信息框
    void InitRenfTable();
    //初始化用户帐户信息框
    void InitUserAccountTable();
    //初始化系统时间控件
    void InitSysTimeCon();
    //初始化加样样本类型列表框
    void InitSampleTypeTable();
    //初始化结果表控件
    void InitResultTableWidget();
    //初始化曲线界面控件
    void InitCurveControl();
private:
    //检测调试界面输入密码
    bool CheckPassword(QString strPw);
    //保存map数据内容到数据库
    void SaveSampleTypeObjToDb();
    //获取一行数据
    QStringList GetRowValue(QTableWidget *tw);
    //设置系统时间
    void SetSysDateTime(QDate& date, QTime time);
    //更新用户登陆数据到表格控件
    void UpdateUserTable();
    //更新加样样本类型数据到表格控件
    void UpdateSampleTypeTable();
    //插入一条数据至测试信息表格
    void InsertTestInfoToTab(QString strNumber, QString strArea1, QString strArea2, QString strRatio,
                             QString strResult, QString strCalcMethod, QString strScanStart,
                             QString strQCBreadth,QString strCheckBreadth, QString strAmpParam,
                             QString strCrestPos1,QString strCrestPosLeft1, QString strCrestPosRight1,
                             QString strCrestPos2,QString strCrestPosLeft2, QString strCrestPosRight2,
                             QString strTestDate, QString strRawData);
    //转换640个高低位数据成320个图形数据
    QVector<double> ConvertGraphData(QByteArray byteGraphData);
    //滤波数据
    void low_passfilter(QVector<double> &oldData);
};

#endif // SETINTERFACE_H
